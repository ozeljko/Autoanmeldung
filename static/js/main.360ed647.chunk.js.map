{"version":3,"sources":["components/Home.js","methodes/formFieldsRegistration.js","components/Registration.js","App.js","reportWebVitals.js","index.js"],"names":["Home","history","useHistory","className","to","type","onClick","push","FormFieldsRegistration","formData","change","id","children","showError","errorMessage","validation","valid","validationMessage","formContent","element","config","value","onChange","event","renderContent","Registration","state","brand","name","required","touched","power","placeholder","generateOptions","map","updateForm","newFormData","newElement","target","setState","this","Component","App","path","exact","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.360ed647.chunk.js","sourcesContent":["import React from 'react';\r\nimport {\r\n    BrowserRouter as Router,    \r\n    Link\r\n  } from \"react-router-dom\";\r\nimport { useHistory } from \"react-router-dom\";\r\n  \r\n\r\nfunction Home() {\r\n\r\n    const history = useHistory();\r\n\r\n    const routeChange = () =>{ \r\n      let path = '/Registration'; \r\n      history.push(path);\r\n    }\r\n\r\n  return (\r\n    <div>    \r\n        <div className='split-pane col-xs-12 col-sm-6 registration-side'>\r\n         <div>    \r\n            <div className='text-content'>\r\n                <div className=\"bold\">Auto</div>\r\n                <div className='big'>REGISTRATION</div>\r\n            </div>\r\n            <Router>\r\n            \r\n            <Link to=\"Registration\">\r\n            <button className='button' type=\"button\" onClick={routeChange}>\r\n                I want to registrate Car\r\n            </button>\r\n            </Link>\r\n                       \r\n            </Router>\r\n        </div>\r\n        </div>\r\n        <div className='split-pane col-xs-12 col-sm-6 list-side'>\r\n        <div>    \r\n            <div className='text-content'>\r\n            <div className=\"bold\">See</div>\r\n            <div className='big'>All registrated Auto's</div>\r\n            </div>\r\n            <Router>\r\n            <Link to=\"/listing\">\r\n            <button className='button' type=\"button\">\r\n                Show me list\r\n            </button>\r\n            </Link>            \r\n            </Router>\r\n        </div>\r\n        </div>\r\n    </div>\r\n\r\n    \r\n        \r\n  );\r\n}\r\n\r\nexport default Home;","import React from \"react\";\r\n\r\nconst FormFieldsRegistration = ({formData,change,id, children}) => {\r\n\r\n    const showError = () => {\r\n        let errorMessage = null;\r\n\r\n        if(\r\n            formData.validation &&\r\n            !formData.valid &&\r\n            formData.validationMessage\r\n        ){\r\n            errorMessage = (\r\n                <div className=\"error-label\">\r\n                    {formData.validationMessage}\r\n                </div>\r\n            )\r\n        }\r\n\r\n        return errorMessage;\r\n    }\r\n    \r\n    const renderContent = () => {\r\n    let formContent = null;\r\n\r\n    switch(formData.element){\r\n        case('input'):\r\n            formContent = (\r\n                <>\r\n                    <input\r\n                        {...formData.config}\r\n                        value={formData.value}\r\n                        className=\"form-control\"\r\n                        onChange={ (event) => change({event,id}) }\r\n                                                \r\n                    />\r\n                    {showError()}\r\n                </>\r\n            )\r\n\r\n        break;\r\n        case('select'):\r\n        formContent = (\r\n            <>\r\n                <select\r\n                   {...formData.config}\r\n                   value={formData.value}\r\n                   className=\"form-control\"\r\n                   onChange={ (event) => change({event,id}) }\r\n                   \r\n                >\r\n                    {children}\r\n                </select>\r\n                {showError()}\r\n            </>\r\n        )\r\n        break;\r\n        default:\r\n            formContent = null\r\n    \r\n    }\r\n    return formContent;\r\n}\r\n\r\nreturn(\r\n    <>{renderContent()}</>\r\n)\r\n\r\n}\r\n\r\nexport default FormFieldsRegistration;","import React, { Component} from 'react';\r\nimport FormFieldsRegistration from '../methodes/formFieldsRegistration';\r\n\r\n\r\nclass Registration extends Component {\r\n  \r\n  state = {\r\n    formData: {\r\n      brand:{\r\n        element:'select',\r\n        value:'',\r\n        config:{\r\n          name:'brand_input'\r\n        },\r\n        validation:{\r\n          required:true\r\n        },\r\n        valid:false,\r\n        touched:false,\r\n        validationMessage:''\r\n      },\r\n      power:{\r\n        element:'input',\r\n        value:'',\r\n        config:{\r\n            name:'power_input',\r\n            type:'number',          \r\n            placeholder:'Enter your KS'\r\n        },\r\n        validation:{\r\n            required:true\r\n        },\r\n        valid:false,\r\n        touched: false,\r\n        validationMessage:''\r\n    },\r\n    }\r\n  }\r\n\r\n  generateOptions = () => {\r\n    const brandArray = ['BMW', 'Audi','Mercedes'];\r\n    \r\n    return brandArray.map((value,id)=>(\r\n      <option key={id} value={value}>{value}</option>\r\n    ))\r\n  }\r\n\r\n  updateForm = (element) => {\r\n    const newFormData = { ...this.state.formData }\r\n    const newElement = { ...newFormData[element.id] }\r\n\r\n    newElement.value = element.event.target.value;\r\n\r\n    newFormData[element.id] = newElement;\r\n        this.setState({\r\n            formData: newFormData\r\n        })\r\n  }\r\n  render(){\r\n    return (\r\n      <>    \r\n          <div className='container'>\r\n              <form>\r\n              \r\n                <div className='form-group'>\r\n                \r\n                    <label>Brand of car</label>\r\n                    \r\n                    <FormFieldsRegistration\r\n                      formData={this.state.formData.brand}\r\n                      change={ (element) => this.updateForm(element)}\r\n                      id='brand'\r\n                    >                          \r\n                          <option value=''>Select brand of auto</option>\r\n                          {this.generateOptions()}\r\n                          \r\n                    </FormFieldsRegistration>\r\n\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                            <label>Power</label>\r\n                            <FormFieldsRegistration\r\n                                formData={this.state.formData.power}\r\n                                change={ (element) => this.updateForm(element) }\r\n                                id=\"power\"\r\n                            />\r\n                </div>\r\n\r\n              </form>\r\n\r\n\r\n          </div>\r\n      </>\r\n\r\n      \r\n          \r\n    )\r\n  }\r\n}\r\n\r\nexport default Registration;","import React from 'react';\nimport { BrowserRouter, Route } from 'react-router-dom';\nimport './App.css';\nimport './Autoanmeldung_styles.css';\nimport './Responsive_styles.css';\nimport Home from './components/Home';\nimport Registration from './components/Registration';\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <BrowserRouter>\n      <Route path=\"/\" exact component={Home}/>\n        <Route path=\"/Registration\" component={Registration}/>\n      </BrowserRouter>      \n    </div>\n\n      \n\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}