{"version":3,"sources":["components/Home.js","methodes/formFieldsRegistration.js","methodes/validate.js","firebase.js","components/Registration.js","components/Listing.js","App.js","reportWebVitals.js","index.js"],"names":["Home","history","useHistory","className","to","type","onClick","push","FormFieldsRegistration","formData","change","id","children","showError","errorMessage","validation","valid","validationMessage","formContent","element","config","value","onChange","event","blur","onBlur","renderContent","validate","error","required","trim","message","app","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","getFirestore","Registration","getAnalytics","state","loading","brand","name","touched","year","placeholder","maxLength","cubics","power","drive","gear","lenght","weight","generateOptionsBrand","map","generateOptionsDrive","generateOptionsGear","updateForm","newFormData","newElement","target","validateData","tuched","setState","submitForm","preventDefault","dataToSubmit","formIsValid","key","sendNewCar","a","collectionRef","collection","db","payload","addDoc","setTimeout","onSuccess","alert","forDataCopy","this","disabled","np","Component","Listing","useState","Cars","setCars","console","log","useEffect","onSnapshot","snapshot","docs","doc","data","class","car","App","path","exact","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uVAmEeA,MA3Df,WAEI,IAAMC,EAAUC,cAgBlB,OACE,gCACI,qBAAKC,UAAU,kDAAf,SACC,gCACG,sBAAKA,UAAU,eAAf,UACI,qBAAKA,UAAU,OAAf,kBACA,qBAAKA,UAAU,MAAf,6BAEJ,cAAC,IAAD,UAEA,cAAC,IAAD,CAAMC,GAAG,eAAT,SACA,wBAAQD,UAAU,SAASE,KAAK,SAASC,QAzBjB,WAE9BL,EAAQM,KADG,kBAwBL,+CAQJ,qBAAKJ,UAAU,0CAAf,SACA,gCACI,sBAAKA,UAAU,eAAf,UACA,qBAAKA,UAAU,OAAf,iBACA,qBAAKA,UAAU,MAAf,uCAEA,cAAC,IAAD,UACA,cAAC,IAAD,CAAMC,GAAG,WAAT,SACA,wBAAQD,UAAU,SAASE,KAAK,SAASC,QApCtB,WAEzBL,EAAQM,KADG,aAmCL,uC,4DCmBGC,EAtEgB,SAAC,GAAoC,IAAnCC,EAAkC,EAAlCA,SAASC,EAAyB,EAAzBA,OAAOC,EAAkB,EAAlBA,GAAIC,EAAc,EAAdA,SAE3CC,EAAY,WACd,IAAIC,EAAe,KAcnB,OAXIL,EAASM,aACRN,EAASO,OACVP,EAASQ,oBAETH,EACI,qBAAKX,UAAU,cAAf,SACKM,EAASQ,qBAKfH,GA+Cf,OACI,mCA7CsB,WACtB,IAAII,EAAc,KAElB,OAAOT,EAASU,SACZ,IAAK,QACDD,EACI,qCACI,iDACQT,EAASW,QADjB,IAEIC,MAAOZ,EAASY,MAChBlB,UAAU,eACVmB,SAAW,SAACC,GAAD,OAAWb,EAAO,CAACa,QAAMZ,KAAGa,KAAK,QAE5CC,OAAS,SAACF,GAAD,OAAWb,EAAO,CAACa,QAAMZ,KAAGa,MAAK,QAG7CX,OAIb,MACA,IAAK,SACLK,EACI,qCACI,kDACOT,EAASW,QADhB,IAEGC,MAAOZ,EAASY,MAChBlB,UAAU,eACVmB,SAAW,SAACC,GAAD,OAAWb,EAAO,CAACa,QAAMZ,QAJvC,SAOKC,KAEJC,OAGT,MACA,QACIK,EAAc,KAGtB,OAAOA,EAIJQ,MCnEMC,EAAW,SAACR,GACrB,IAAIS,EAAQ,EAAC,EAAK,IAElB,GAAGT,EAAQJ,WAAWc,SAAS,CAC3B,IAAMb,EAAiC,KAAzBG,EAAQE,MAAMS,OACtBC,EAAO,UAAOf,EAA2C,GAAnC,oCAC5BY,EAASZ,EAA0BY,EAAlB,CAACZ,EAAMe,GAG5B,OAAOH,G,gCCYLI,EAAMC,YAZW,CACrBC,OAAQ,0CACRC,WAAY,wCACZC,YAAa,+EACbC,UAAW,wBACXC,cAAe,oCACfC,kBAAmB,eACnBC,MAAO,4CACPC,cAAe,iBAKFC,gBCVTC,GDWYC,YAAaZ,G,4MCT7Ba,MAAQ,CACNC,SAAS,EACTrC,SAAU,CACRsC,MAAM,CACJ5B,QAAQ,SACRE,MAAM,GACND,OAAO,CACL4B,KAAK,eAEPjC,WAAW,CACTc,UAAS,GAEXb,OAAM,EACNiC,SAAQ,EACRhC,kBAAkB,IAEpBiC,KAAK,CACH/B,QAAQ,QACRE,MAAM,GACND,OAAO,CACH4B,KAAK,aACL3C,KAAK,GACL8C,YAAY,6BACZC,UAAW,KAGfrC,WAAW,CACPc,UAAS,GAEbb,OAAM,EACNiC,SAAS,EACThC,kBAAkB,IAEtBoC,OAAO,CACLlC,QAAQ,QACRE,MAAM,GACND,OAAO,CACH4B,KAAK,eACL3C,KAAK,GACL8C,YAAY,6BACZC,UAAW,KAGfrC,WAAW,CACPc,UAAS,GAEbb,OAAM,EACNiC,SAAS,EACThC,kBAAkB,IAElBqC,MAAM,CACJnC,QAAQ,QACRE,MAAM,GACND,OAAO,CACH4B,KAAK,cACL3C,KAAK,GACL8C,YAAY,4BACZC,UAAW,KAGfrC,WAAW,CACPc,UAAS,GAEbb,OAAM,EACNiC,SAAS,EACThC,kBAAkB,IAEtBsC,MAAM,CACJpC,QAAQ,SACRE,MAAM,GACND,OAAO,CACL4B,KAAK,eAEPjC,WAAW,CACTc,UAAS,GAEXb,OAAM,EACNiC,SAAQ,EACRhC,kBAAkB,IAEpBuC,KAAK,CACHrC,QAAQ,SACRE,MAAM,GACND,OAAO,CACL4B,KAAK,cAEPjC,WAAW,CACTc,UAAS,GAEXb,OAAM,EACNiC,SAAQ,EACRhC,kBAAkB,IAEpBwC,OAAO,CACLtC,QAAQ,QACRE,MAAM,GACND,OAAO,CACH4B,KAAK,eACL3C,KAAK,GACL8C,YAAY,0BACZC,UAAW,KAGfrC,WAAW,CACPc,UAAS,GAEbb,OAAM,EACNiC,SAAS,EACThC,kBAAkB,IAEtByC,OAAO,CACLvC,QAAQ,QACRE,MAAM,GACND,OAAO,CACH4B,KAAK,eACL3C,KAAK,GACL8C,YAAY,2BACZC,UAAW,KAGfrC,WAAW,CACPc,UAAS,GAEbb,OAAM,EACNiC,SAAS,EACThC,kBAAkB,M,EAKpB0C,qBAAuB,WAGrB,MAFmB,CAAC,MAAO,OAAO,WAAY,UAE5BC,KAAI,SAACvC,EAAMV,GAAP,OACpB,wBAAiBU,MAAOA,EAAxB,SAAgCA,GAAnBV,O,EAKjBkD,qBAAuB,WAGrB,MAFmB,CAAC,QAAS,OAAO,OAElBD,KAAI,SAACvC,EAAMV,GAAP,OACpB,wBAAiBU,MAAOA,EAAxB,SAAgCA,GAAnBV,O,EAIjBmD,oBAAsB,WAGpB,MAFkB,CAAC,OAAQ,UAEVF,KAAI,SAACvC,EAAMV,GAAP,OACnB,wBAAiBU,MAAOA,EAAxB,SAAgCA,GAAnBV,O,EAIjBoD,WAAa,SAAC5C,GACZ,IAAM6C,EAAW,eAAQ,EAAKnB,MAAMpC,UAC9BwD,EAAU,eAAQD,EAAY7C,EAAQR,KAE5CsD,EAAW5C,MAAQF,EAAQI,MAAM2C,OAAO7C,MAGxC,IAAI8C,EAAexC,EAASsC,GACxBA,EAAWjD,MAAQmD,EAAa,GAChCF,EAAWhD,kBAAoBkD,EAAa,GAG7ChD,EAAQK,OACTyC,EAAWG,OAASjD,EAAQK,MAG9BwC,EAAY7C,EAAQR,IAAMsD,EACtB,EAAKI,SAAS,CACV5D,SAAUuD,K,EAKtBM,WAAa,SAAC/C,GACZA,EAAMgD,iBAEN,IAAIC,EAAe,GACfC,GAAc,EAElB,IAAI,IAAIC,KAAO,EAAK7B,MAAMpC,SACtBgE,EAAc,EAAK5B,MAAMpC,SAASiE,GAAK1D,OAASyD,EAEpD,GAAGA,EAAY,CAEX,IAAI,IAAIC,KADR,EAAKL,SAAS,CAACvB,SAAQ,IACR,EAAKD,MAAMpC,SACtB+D,EAAaE,GAAQ,EAAK7B,MAAMpC,SAASiE,GAAKrD,MAKpD,IAAMsD,EAAU,uCAAG,8BAAAC,EAAA,6DACZC,EAAgBC,YAAWC,EAAI,QAC/BC,EAAU,CAACR,gBAFC,SAGZS,YAAOJ,EAAeG,GAHV,2CAAH,qDAKhBL,IAGEO,YAAW,WACP,EAAKb,SAAS,CAACvB,SAAQ,IACvB,EAAKqC,cACN,UAGHC,MAAM,sB,EAIZD,UAAY,WACV,IAAIE,EAAW,eACR,EAAKxC,MAAMpC,UAGlB,IAAI,IAAIiE,KAAO,EAAK7B,MAAMpC,SACtB4E,EAAYX,GAAKrD,MAAQ,GACzBgE,EAAYX,GAAK1D,OAAQ,EACzBqE,EAAYX,GAAKzB,SAAU,EAC3BoC,EAAYX,GAAKzD,kBAAoB,GAKzC,EAAKoD,SAAS,CAAC5D,SAAU4E,IACzBD,MAAM,c,4CAEN,WAAS,IAAD,OACN,OACE,mCACI,qBAAKjF,UAAU,YAAf,SACI,iCAEE,sBAAKA,UAAU,aAAf,UACI,iDACA,eAAC,EAAD,CACEM,SAAU6E,KAAKzC,MAAMpC,SAASsC,MAC9BrC,OAAS,SAACS,GAAD,OAAa,EAAK4C,WAAW5C,IACtCR,GAAG,QAHL,UAKM,wBAAQU,MAAM,GAAd,kCACCiE,KAAK3B,6BAGhB,sBAAKxD,UAAU,aAAf,UACY,uDACA,cAAC,EAAD,CACIM,SAAU6E,KAAKzC,MAAMpC,SAASyC,KAC9BxC,OAAS,SAACS,GAAD,OAAa,EAAK4C,WAAW5C,IACtCR,GAAG,YAGnB,sBAAKR,UAAU,aAAf,UACY,2CACA,cAAC,EAAD,CACIM,SAAU6E,KAAKzC,MAAMpC,SAAS4C,OAC9B3C,OAAS,SAACS,GAAD,OAAa,EAAK4C,WAAW5C,IACtCR,GAAG,cAInB,sBAAKR,UAAU,aAAf,UACY,0CACA,cAAC,EAAD,CACIM,SAAU6E,KAAKzC,MAAMpC,SAAS6C,MAC9B5C,OAAS,SAACS,GAAD,OAAa,EAAK4C,WAAW5C,IACtCR,GAAG,aAGnB,sBAAKR,UAAU,aAAf,UACI,gDACA,eAAC,EAAD,CACEM,SAAU6E,KAAKzC,MAAMpC,SAAS8C,MAC9B7C,OAAS,SAACS,GAAD,OAAa,EAAK4C,WAAW5C,IACtCR,GAAG,QAHL,UAKM,wBAAQU,MAAM,GAAd,iCACCiE,KAAKzB,6BAEV,sBAAK1D,UAAU,aAAf,UACF,yCACA,eAAC,EAAD,CACEM,SAAU6E,KAAKzC,MAAMpC,SAAS+C,KAC9B9C,OAAS,SAACS,GAAD,OAAa,EAAK4C,WAAW5C,IACtCR,GAAG,OAHL,UAKM,wBAAQU,MAAM,GAAd,iCACCiE,KAAKxB,4BAGhB,sBAAK3D,UAAU,aAAf,UACY,kDACA,cAAC,EAAD,CACIM,SAAU6E,KAAKzC,MAAMpC,SAASgD,OAC9B/C,OAAS,SAACS,GAAD,OAAa,EAAK4C,WAAW5C,IACtCR,GAAG,cAEb,sBAAKR,UAAU,aAAf,UACM,2CACA,cAAC,EAAD,CACIM,SAAU6E,KAAKzC,MAAMpC,SAASiD,OAC9BhD,OAAS,SAACS,GAAD,OAAa,EAAK4C,WAAW5C,IACtCR,GAAG,cAInB,wBACYN,KAAK,SACLF,UAAU,kBACVG,QAAU,SAACiB,GAAD,OAAU,EAAK+C,WAAW/C,IACpCgE,SAAUD,KAAKzC,MAAMC,QACjC0C,IAAE,EALF,+B,GAvTWC,cA4UZ9C,I,QC/RA+C,EA/CC,WAEd,MAAuBC,mBAAS,IAAhC,mBAAMC,EAAN,KAAYC,EAAZ,KAYE,OAVFC,QAAQC,IAAIH,GAEZI,qBACE,kBACAC,YAAWnB,YAAWC,EAAG,SAAQ,SAACmB,GAAD,OAChCL,EAAQK,EAASC,KAAKvC,KAAI,SAACwC,GAAD,mBAAC,eAAaA,EAAIC,QAAlB,IAA0B1F,GAAIyF,EAAIzF,cAE/D,IAII,mCACF,qBAAKR,UAAU,YAAf,SAEA,sBAAMmG,MAAM,OAAZ,SACCV,EAAKhC,KAAI,SAAC2C,GAAD,OACV,oCACA,qBAAKpG,UAAU,aAAf,SAA4B,uCAC5B,sBAAKmG,MAAM,OAAX,UAEE,6BAAKC,EAAIxD,QAET,4BAAIwD,EAAIrD,OACR,4BAAIqD,EAAIlD,SACR,4BAAIkD,EAAIjD,QACR,4BAAIiD,EAAIhD,QACR,4BAAIgD,EAAI/C,OACR,4BAAI+C,EAAI9C,SACR,4BAAI8C,EAAI7C,yBCRC8C,MAlBf,WAIE,OACE,qBAAKrG,UAAU,MAAf,SACE,eAAC,IAAD,WACA,cAAC,IAAD,CAAOsG,KAAK,IAAIC,OAAK,EAACC,UAAW3G,IAC/B,cAAC,IAAD,CAAOyG,KAAK,gBAAgBE,UAAWhE,IACvC,cAAC,IAAD,CAAO8D,KAAK,WAAWE,UAAWjB,UCb3BkB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,MCIdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.3b6cff0e.chunk.js","sourcesContent":["import React from 'react';\r\nimport {\r\n    BrowserRouter as Router,    \r\n    Link\r\n  } from \"react-router-dom\";\r\nimport { useHistory } from \"react-router-dom\";\r\n  \r\n\r\nfunction Home() {\r\n\r\n    const history = useHistory();\r\n\r\n    const routeChangeRegistration = () =>{ \r\n      let path = '/Registration'; \r\n      history.push(path);\r\n    }\r\n\r\n    const routeChangeListing = () =>{ \r\n      let path = '/Listing'; \r\n      history.push(path);\r\n    }\r\n\r\n   \r\n\r\n  \r\n\r\n  return (\r\n    <div>    \r\n        <div className='split-pane col-xs-12 col-sm-6 registration-side'>\r\n         <div>    \r\n            <div className='text-content'>\r\n                <div className=\"bold\">Auto</div>\r\n                <div className='big'>REGISTRATION</div>\r\n            </div>\r\n            <Router>\r\n            \r\n            <Link to=\"Registration\">\r\n            <button className='button' type=\"button\" onClick={routeChangeRegistration}>\r\n                I want to registrate Car\r\n            </button>\r\n            </Link>\r\n                       \r\n            </Router>\r\n        </div>\r\n        </div>\r\n        <div className='split-pane col-xs-12 col-sm-6 list-side'>\r\n        <div>    \r\n            <div className='text-content'>\r\n            <div className=\"bold\">See</div>\r\n            <div className='big'>All registrated Auto's</div>\r\n            </div>\r\n            <Router>\r\n            <Link to=\"/Listing\">\r\n            <button className='button' type=\"button\" onClick={routeChangeListing}>\r\n                Show me list\r\n            </button>\r\n            </Link>            \r\n            </Router>\r\n        </div>\r\n        </div>\r\n    </div>\r\n\r\n    \r\n        \r\n  );\r\n}\r\n\r\nexport default Home;","import React from \"react\";\r\n\r\nconst FormFieldsRegistration = ({formData,change,id, children}) => {\r\n\r\n    const showError = () => {\r\n        let errorMessage = null;\r\n\r\n        if(\r\n            formData.validation &&\r\n            !formData.valid &&\r\n            formData.validationMessage\r\n        ){\r\n            errorMessage = (\r\n                <div className=\"error-label\">\r\n                    {formData.validationMessage}\r\n                </div>\r\n            )\r\n        }\r\n\r\n        return errorMessage;\r\n    }\r\n    \r\n    const renderContent = () => {\r\n    let formContent = null;\r\n\r\n    switch(formData.element){\r\n        case('input'):\r\n            formContent = (\r\n                <>\r\n                    <input \r\n                        {...formData.config}\r\n                        value={formData.value}\r\n                        className=\"form-control\"\r\n                        onChange={ (event) => change({event,id,blur:null}) }\r\n                        ///if the field was touched change blur to true\r\n                        onBlur={ (event) => change({event,id,blur:true}) }\r\n                                                \r\n                        />\r\n                    {showError()}\r\n                </>\r\n            )\r\n\r\n        break;\r\n        case('select'):\r\n        formContent = (\r\n            <>\r\n                <select\r\n                   {...formData.config}\r\n                   value={formData.value}\r\n                   className=\"form-control\"\r\n                   onChange={ (event) => change({event,id}) }\r\n                   \r\n                >\r\n                    {children}\r\n                </select>\r\n                {showError()}\r\n            </>\r\n        )\r\n        break;\r\n        default:\r\n            formContent = null\r\n    \r\n    }\r\n    return formContent;\r\n}\r\n\r\nreturn(\r\n    <>{renderContent()}</>\r\n)\r\n\r\n}\r\n\r\nexport default FormFieldsRegistration;","export const validate = (element) => {\r\n    let error = [true,''];\r\n\r\n    if(element.validation.required){\r\n        const valid = element.value.trim() !== '';\r\n        const message = `${!valid ? 'Field is empty. Check your input':''}`;\r\n        error = !valid ? [valid,message] : error\r\n    }\r\n\r\n    return error\r\n}","// Import the functions you need from the SDKs you need\r\nimport { initializeApp } from \"firebase/app\";\r\nimport { getFirestore} from \"firebase/firestore\";\r\nimport { getAnalytics } from \"firebase/analytics\";\r\n// TODO: Add SDKs for Firebase products that you want to use\r\n// https://firebase.google.com/docs/web/setup#available-libraries\r\n\r\n// Your web app's Firebase configuration\r\n// For Firebase JS SDK v7.20.0 and later, measurementId is optional\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyDnY4reWji6FU9S7W3WsucyrGxisqEV8Uw\",\r\n  authDomain: \"autoanmeldung-project.firebaseapp.com\",\r\n  databaseURL: \"https://autoanmeldung-project-default-rtdb.europe-west1.firebasedatabase.app\",\r\n  projectId: \"autoanmeldung-project\",\r\n  storageBucket: \"autoanmeldung-project.appspot.com\",\r\n  messagingSenderId: \"439107695587\",\r\n  appId: \"1:439107695587:web:3c0c7fa14e78a4613c66d6\",\r\n  measurementId: \"G-NJM8VQNE10\"\r\n};\r\n\r\n// Initialize Firebase\r\nconst app = initializeApp(firebaseConfig);\r\nexport default getFirestore();\r\nconst analytics = getAnalytics(app);\r\n","import React, { Component} from 'react';\r\nimport FormFieldsRegistration from '../methodes/formFieldsRegistration';\r\nimport {validate} from '../methodes/validate';\r\n\r\n// /Import Firestore database\r\nimport { useEffect, useState } from 'react';\r\nimport { collection, doc, onSnapshot, addDoc } from '@firebase/firestore';\r\nimport db from '../firebase';\r\n\r\n\r\n\r\n\r\nclass Registration extends Component {\r\n  \r\n  state = {\r\n    loading: false,\r\n    formData: {\r\n      brand:{\r\n        element:'select',\r\n        value:'',\r\n        config:{\r\n          name:'brand_input'\r\n        },\r\n        validation:{\r\n          required:true\r\n        },\r\n        valid:false,\r\n        touched:false,\r\n        validationMessage:''\r\n      },\r\n      year:{\r\n        element:'input',\r\n        value:'',        \r\n        config:{\r\n            name:'year_input',\r\n            type:'',          \r\n            placeholder:'year of vehicle production',\r\n            maxLength: '4'\r\n                      \r\n        },\r\n        validation:{\r\n            required:true\r\n        },\r\n        valid:false,\r\n        touched: false,\r\n        validationMessage:''\r\n    },\r\n    cubics:{\r\n      element:'input',\r\n      value:'',        \r\n      config:{\r\n          name:'cubics_input',\r\n          type:'',          \r\n          placeholder:'Enter vehicle motor volume',\r\n          maxLength: '4'\r\n                    \r\n      },\r\n      validation:{\r\n          required:true\r\n      },\r\n      valid:false,\r\n      touched: false,\r\n      validationMessage:''\r\n  },\r\n      power:{\r\n        element:'input',\r\n        value:'',        \r\n        config:{\r\n            name:'power_input',\r\n            type:'',          \r\n            placeholder:'Enter vehicle motor power',\r\n            maxLength: '3'\r\n                      \r\n        },\r\n        validation:{\r\n            required:true\r\n        },\r\n        valid:false,\r\n        touched: false,\r\n        validationMessage:''\r\n    },\r\n    drive:{\r\n      element:'select',\r\n      value:'',\r\n      config:{\r\n        name:'drive_input'\r\n      },\r\n      validation:{\r\n        required:true\r\n      },\r\n      valid:false,\r\n      touched:false,\r\n      validationMessage:''\r\n    },\r\n    gear:{\r\n      element:'select',\r\n      value:'',\r\n      config:{\r\n        name:'gear_input'\r\n      },\r\n      validation:{\r\n        required:true\r\n      },\r\n      valid:false,\r\n      touched:false,\r\n      validationMessage:''\r\n    },\r\n    lenght:{\r\n      element:'input',\r\n      value:'',        \r\n      config:{\r\n          name:'lenght_input',\r\n          type:'',          \r\n          placeholder:'Enter vehicle lenght cm',\r\n          maxLength: '4'\r\n                    \r\n      },\r\n      validation:{\r\n          required:true\r\n      },\r\n      valid:false,\r\n      touched: false,\r\n      validationMessage:''\r\n  },\r\n  weight:{\r\n    element:'input',\r\n    value:'',        \r\n    config:{\r\n        name:'weight_input',\r\n        type:'',          \r\n        placeholder:'Enter vehicle weight Kg ',\r\n        maxLength: '4'\r\n                  \r\n    },\r\n    validation:{\r\n        required:true\r\n    },\r\n    valid:false,\r\n    touched: false,\r\n    validationMessage:''\r\n},\r\n    }\r\n  }\r\n///brand field select\r\n  generateOptionsBrand = () => {\r\n    const brandArray = ['BMW', 'Audi','Mercedes', 'Toyota'];    \r\n    \r\n    return brandArray.map((value,id)=>(\r\n      <option key={id} value={value}>{value}</option>\r\n    ))\r\n  }\r\n\r\n  ///drive field select\r\n  generateOptionsDrive = () => {    \r\n    const driveArray = ['front', 'back','4x4'];    \r\n    \r\n    return driveArray.map((value,id)=>(\r\n      <option key={id} value={value}>{value}</option>\r\n    ))\r\n  }\r\n  ///Gear field select\r\n  generateOptionsGear = () => {  \r\n    const gearArray = ['auto', 'manual'];\r\n    \r\n    return gearArray.map((value,id)=>(\r\n      <option key={id} value={value}>{value}</option>\r\n    ))\r\n  }\r\n\r\n  updateForm = (element) => {\r\n    const newFormData = { ...this.state.formData }\r\n    const newElement = { ...newFormData[element.id] }\r\n\r\n    newElement.value = element.event.target.value;\r\n\r\n    ///Validation\r\n    let validateData = validate(newElement);\r\n        newElement.valid = validateData[0];\r\n        newElement.validationMessage = validateData[1];\r\n\r\n///if the field was touched\r\n    if(element.blur){\r\n      newElement.tuched = element.blur\r\n    }\r\n///state\r\n    newFormData[element.id] = newElement;\r\n        this.setState({\r\n            formData: newFormData\r\n        })\r\n  }\r\n\r\n///Submit\r\nsubmitForm = (event) => {\r\n  event.preventDefault();\r\n\r\n  let dataToSubmit = {};\r\n  let formIsValid = true;\r\n\r\n  for(let key in this.state.formData){\r\n      formIsValid = this.state.formData[key].valid && formIsValid;\r\n  }\r\n  if(formIsValid){\r\n      this.setState({loading:true});\r\n      for(let key in this.state.formData){\r\n          dataToSubmit[key] =  this.state.formData[key].value\r\n      }\r\n      // console.log('Bingo',dataToSubmit);\r\n     \r\n      ///into firestore\r\n    const sendNewCar = async () => {        \r\n     const collectionRef = collection(db, \"Cars\");\r\n     const payload = {dataToSubmit};\r\n     await addDoc(collectionRef, payload);\r\n      };\r\n    sendNewCar();\r\n\r\n\r\n      setTimeout(() => {\r\n          this.setState({loading:false});\r\n          this.onSuccess();          \r\n      }, 2000);\r\n\r\n  } else {\r\n      alert('Form is not valid')\r\n  }\r\n}\r\n\r\nonSuccess = () => {\r\n  let forDataCopy = {\r\n      ...this.state.formData\r\n  }\r\n\r\n  for(let key in this.state.formData){\r\n      forDataCopy[key].value = '';\r\n      forDataCopy[key].valid = false;\r\n      forDataCopy[key].touched = false;\r\n      forDataCopy[key].validationMessage = '';\r\n  }\r\n\r\n\r\n\r\n  this.setState({formData: forDataCopy});\r\n  alert('Thank You')\r\n}\r\n  render(){\r\n    return (\r\n      <>    \r\n          <div className='container'>\r\n              <form>\r\n              \r\n                <div className='form-group'>                \r\n                    <label>Brand of car</label>                    \r\n                    <FormFieldsRegistration\r\n                      formData={this.state.formData.brand}\r\n                      change={ (element) => this.updateForm(element)}\r\n                      id='brand'\r\n                    >                          \r\n                          <option value=''>Select brand of auto</option>\r\n                          {this.generateOptionsBrand()}                          \r\n                    </FormFieldsRegistration>\r\n                </div>\r\n                <div className=\"form-group\">\r\n                            <label>Year of production</label>\r\n                            <FormFieldsRegistration\r\n                                formData={this.state.formData.year}\r\n                                change={ (element) => this.updateForm(element) }\r\n                                id=\"year\"\r\n                            />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                            <label>Cubics</label>\r\n                            <FormFieldsRegistration\r\n                                formData={this.state.formData.cubics}\r\n                                change={ (element) => this.updateForm(element) }\r\n                                id=\"cubics\"\r\n                            />\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                            <label>Power</label>\r\n                            <FormFieldsRegistration\r\n                                formData={this.state.formData.power}\r\n                                change={ (element) => this.updateForm(element) }\r\n                                id=\"power\"\r\n                            />\r\n                </div>\r\n                <div className='form-group'>                \r\n                    <label>Car's Drive</label>                    \r\n                    <FormFieldsRegistration\r\n                      formData={this.state.formData.drive}\r\n                      change={ (element) => this.updateForm(element)}\r\n                      id='drive'\r\n                    >                          \r\n                          <option value=''>Select auto's drive</option>\r\n                          {this.generateOptionsDrive()}                          \r\n                    </FormFieldsRegistration>\r\n                </div><div className='form-group'>                \r\n                    <label>Gear</label>                    \r\n                    <FormFieldsRegistration\r\n                      formData={this.state.formData.gear}\r\n                      change={ (element) => this.updateForm(element)}\r\n                      id='gear'\r\n                    >                          \r\n                          <option value=''>Select gear of auto</option>\r\n                          {this.generateOptionsGear()}                          \r\n                    </FormFieldsRegistration>\r\n                </div>\r\n                <div className=\"form-group\">\r\n                            <label>Auto's lenght</label>\r\n                            <FormFieldsRegistration\r\n                                formData={this.state.formData.lenght}\r\n                                change={ (element) => this.updateForm(element) }\r\n                                id=\"lenght\"\r\n                            />\r\n                </div><div className=\"form-group\">\r\n                            <label>Weight</label>\r\n                            <FormFieldsRegistration\r\n                                formData={this.state.formData.weight}\r\n                                change={ (element) => this.updateForm(element) }\r\n                                id=\"weight\"\r\n                            />\r\n                </div>\r\n\r\n                <button\r\n                            type=\"submit\"\r\n                            className=\"btn btn-primary\"\r\n                            onClick={ (event)=> this.submitForm(event) }\r\n                            disabled={this.state.loading}\r\n                np>\r\n                Submit\r\n                </button>\r\n\r\n              </form>\r\n\r\n\r\n          </div>\r\n      </>\r\n\r\n      \r\n          \r\n    )\r\n  }\r\n}\r\n\r\nexport default Registration;","import React, { Component} from 'react';\r\n\r\n// /Import Firestore database\r\nimport { useEffect, useState } from 'react';\r\nimport { collection, doc, onSnapshot, setDoc } from '@firebase/firestore';\r\nimport db from '../firebase';\r\n\r\n\r\n\r\n\r\nconst Listing = () => {\r\n  \r\n  const[Cars, setCars] = useState([]);\r\n\r\n  console.log(Cars);\r\n  \r\n  useEffect(\r\n    () =>    \r\n    onSnapshot(collection(db,\"Cars\"),(snapshot) => \r\n     setCars(snapshot.docs.map((doc) => ({...doc.data(), id: doc.id})))\r\n    ),\r\n  []\r\n  );   \r\n\r\n    return (\r\n      <>    \r\n    <div className='container'>        \r\n    \r\n    <main class=\"grid\">\r\n    {Cars.map((car) => (         \r\n    <article>\r\n    <div className=\"image_auto\"><p>Auto</p></div>\r\n    <div class=\"text\">\r\n\r\n      <h3>{car.brand}</h3>\r\n           \r\n      <p>{car.year}</p>\r\n      <p>{car.cubics}</p>\r\n      <p>{car.power}</p>\r\n      <p>{car.drive}</p>\r\n      <p>{car.gear}</p>\r\n      <p>{car.lenght}</p>\r\n      <p>{car.weight}</p>\r\n            \r\n    </div>\r\n    </article>\r\n    ))}\r\n    </main>\r\n    </div>    \r\n      \r\n      </>   \r\n    );\r\n  \r\n}\r\n\r\n\r\n\r\nexport default Listing;\r\n\r\n\r\n\r\n","import React from 'react';\nimport { BrowserRouter, Route } from 'react-router-dom';\nimport './App.css';\nimport './Autoanmeldung_styles.css';\nimport './Responsive_styles.css';\nimport './Listing_styles.css';\nimport Home from './components/Home';\nimport Registration from './components/Registration';\nimport Listing from './components/Listing';\n// /Import Firestore database\nimport { useEffect } from 'react';\nimport { collection, doc, onSnapshot } from '@firebase/firestore';\nimport db from './firebase';\n\n\n\nfunction App() {\n\n  \n\n  return (\n    <div className=\"App\">\n      <BrowserRouter>\n      <Route path=\"/\" exact component={Home}/>\n        <Route path=\"/Registration\" component={Registration}/>\n        <Route path=\"/Listing\" component={Listing}/>\n      </BrowserRouter>      \n    </div>\n\n      \n\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n\n\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}